---
import { Picture } from "astro:assets";
import ultroLogo from "../assets/ultroblack.png";

interface NavItem {
    title: string;
    href: string;
}

const { expandedNav = false } = Astro.props;

const navHeight = 20;
const expandedHeight = expandedNav ? 48 : 20;

/*
    PLEASE ASTRO FIX THIS
    const tailwindNavHeight = `h-${navHeight.toString()}`;
    const tailwindExpandedHeight = `h-${expandedHeight.toString()}`;
*/
const tailwindNavHeight = "h-20";
const tailwindExpandedHeight = expandedNav ? "h-48" : "h-20";

const leftNavItems: NavItem[] = [
    { title: "About", href: "/about/" },
    { title: "Robots", href: "/robots/" },
];

const rightNavItems: NavItem[] = [
    { title: "Outreach", href: "/outreach/" },
    { title: "Resources", href: "/resources/" },
];

const currentPath = Astro.url.pathname;
---

<nav
    id="fullnav"
    {...expandedNav && {
        "data-navheight": navHeight.toString(),
        "data-expandedheight": expandedHeight.toString()
    }}
    class={`bg-black/60 font-display font-medium ${tailwindExpandedHeight} backdrop-blur-sm flex justify-center ${expandedNav ? "fixed inset-x-0 border-b-black/60" : "sticky border-b-gray-200/30"} top-0 transition-all duration-100 z-10 border-b-2`}
>
    <div
        class={`text-white text-lg ${tailwindNavHeight} flex flex-1 items-center justify-end`}
    >
        {
            leftNavItems.map((item) => (
                <a
                    href={item.href}
                    class={`px-6 py-4 ${currentPath === item.href ? "font-extrabold text-white" : "hover:text-gray-300 transition-colors"}`}
                >
                    {item.title}
                </a>
            ))
        }
    </div>
    <!-- TODO: when replacing with SVG remove -mt-[2px] -->
    <a href="/" class="flex-none items-center -mt-[2px]">
        <Picture src={ultroLogo} id="logo" class={`h-[calc(100%-2px)] w-auto px-6 transition-all`} loading="eager" formats={['avif']} alt="Ultro Logo" />
    </a>
    <div
        class={`text-white text-lg ${tailwindNavHeight} flex flex-1 items-center justify-start`}
    >
        {
            rightNavItems.map((item) => (
                <a
                    href={item.href}
                    class={`px-6 py-4 ${currentPath === item.href ? "font-extrabold text-white" : "hover:text-gray-300"}`}
                >
                    {item.title}
                </a>
            ))
        }
    </div>
</nav>

{expandedNav && (
    <script>
        const navbar = document.getElementById("fullnav");
        const logo = document.getElementById("logo");

        // astro i just want to pass this from the frontmatter. please add feature
        const logoMin = parseInt(navbar?.dataset?.navheight ?? "20");
        const logoMax = parseInt(navbar?.dataset?.expandedheight ?? "48");

        const scrollScale = 0.25 * parseFloat(getComputedStyle(document.documentElement).fontSize);

        let ticking = false;

        window.addEventListener("scroll", () => {
            // Sync animation with repaints
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    const scrollPosition = window.scrollY;
                    const logoSize = Math.max(
                        logoMin * scrollScale,
                        logoMax * scrollScale - scrollPosition,
                    );

                    if (navbar) navbar.style.height = `${logoSize}px`;
                    if (logo) logo.style.height = `${logoSize}px`;
                    if (logoMax * scrollScale - scrollPosition <= logoMin * scrollScale) {
                        navbar?.classList.add("border-b-gray-200/30");
                        navbar?.classList.remove("bg-black/40");
                    } else {
                        navbar?.classList.add("bg-black/40");
                        navbar?.classList.remove("border-b-gray-200/30");
                    }
                    ticking = false;
                });

                ticking = true;
            }
        });
    </script>
)}